   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC3:
  20 0000 506F7430 		.ascii	"Pot0Value 2: 0x%X \012\015\000"
  20      56616C75 
  20      6520323A 
  20      20307825 
  20      58200A0D 
  21 0015 000000   		.align	2
  22              	.LC6:
  23 0018 0D0A00   		.ascii	"\015\012\000"
  24 001b 00       		.align	2
  25              	.LC8:
  26 001c 4C3A00   		.ascii	"L:\000"
  27 001f 00       		.align	2
  28              	.LC11:
  29 0020 30782558 		.ascii	"0x%X,\000"
  29      2C00
  30 0026 0000     		.align	2
  31              	.LC14:
  32 0028 30782558 		.ascii	"0x%X\000"
  32      00
  33 002d 000000   		.align	2
  34              	.LC16:
  35 0030 2C00     		.ascii	",\000"
  36 0032 0000     		.section	.text.main,"ax",%progbits
  37              		.align	2
  38              		.global	main
  39              		.code	16
  40              		.thumb_func
  42              	main:
  43              	.LFB0:
  44              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** #include "derivative.h" /* include peripheral declarations */
   2:../Sources/main.c **** #include "TFC\TFC.h"
   3:../Sources/main.c **** extern volatile uint16_t PotADC_Value[2];
   4:../Sources/main.c **** int main(void)
   5:../Sources/main.c **** {
  45              		.loc 1 5 0
  46              		.cfi_startproc
  47 0000 90B5     		push	{r4, r7, lr}
  48              	.LCFI0:
  49              		.cfi_def_cfa_offset 12
  50              		.cfi_offset 4, -12
  51              		.cfi_offset 7, -8
  52              		.cfi_offset 14, -4
  53 0002 83B0     		sub	sp, sp, #12
  54              	.LCFI1:
  55              		.cfi_def_cfa_offset 24
  56 0004 00AF     		add	r7, sp, #0
  57              	.LCFI2:
  58              		.cfi_def_cfa_register 7
   6:../Sources/main.c **** 	uint32_t t,i=0;
  59              		.loc 1 6 0
  60 0006 0023     		mov	r3, #0
  61 0008 3B60     		str	r3, [r7]
   7:../Sources/main.c **** 	
   8:../Sources/main.c **** 	TFC_Init();
  62              		.loc 1 8 0
  63 000a FFF7FEFF 		bl	TFC_Init
  64              	.L29:
   9:../Sources/main.c **** 	
  10:../Sources/main.c **** 	for(;;)
  11:../Sources/main.c **** 	{	   
  12:../Sources/main.c **** 		//TFC_Task must be called in your main loop.  This keeps certain processing happy (I.E. Serial po
  13:../Sources/main.c **** 			TFC_Task();
  65              		.loc 1 13 0
  66 000e FFF7FEFF 		bl	TFC_Task
  14:../Sources/main.c **** 
  15:../Sources/main.c **** 			//This Demo program will look at the middle 2 switch to select one of 4 demo modes.
  16:../Sources/main.c **** 			//Let's look at the middle 2 switches
  17:../Sources/main.c **** 			switch((TFC_GetDIP_Switch()>>1)&0x03)
  67              		.loc 1 17 0
  68 0012 FFF7FEFF 		bl	TFC_GetDIP_Switch
  69 0016 031C     		mov	r3, r0
  70 0018 5B08     		lsr	r3, r3, #1
  71 001a DBB2     		uxtb	r3, r3
  72 001c 1A1C     		mov	r2, r3
  73 001e 0323     		mov	r3, #3
  74 0020 1340     		and	r3, r2
  75 0022 022B     		cmp	r3, #2
  76 0024 00D1     		bne	.LCB30
  77 0026 83E0     		b	.L4	@long jump
  78              	.LCB30:
  79 0028 032B     		cmp	r3, #3
  80 002a 00D1     		bne	.LCB32
  81 002c A6E0     		b	.L5	@long jump
  82              	.LCB32:
  83 002e 012B     		cmp	r3, #1
  84 0030 3ED0     		beq	.L3
  18:../Sources/main.c **** 			{
  19:../Sources/main.c **** 			default:
  20:../Sources/main.c **** 			case 0 :
  21:../Sources/main.c **** 				//Demo mode 0 just tests the switches and LED's
  22:../Sources/main.c **** 				if(TFC_PUSH_BUTTON_0_PRESSED)
  85              		.loc 1 22 0
  86 0032 994B     		ldr	r3, .L32
  87 0034 1A69     		ldr	r2, [r3, #16]
  88 0036 8023     		mov	r3, #128
  89 0038 9B01     		lsl	r3, r3, #6
  90 003a 1340     		and	r3, r2
  91 003c 04D0     		beq	.L6
  23:../Sources/main.c **** 					TFC_BAT_LED0_ON;
  92              		.loc 1 23 0
  93 003e 974B     		ldr	r3, .L32+4
  94 0040 8022     		mov	r2, #128
  95 0042 5200     		lsl	r2, r2, #1
  96 0044 5A60     		str	r2, [r3, #4]
  97 0046 03E0     		b	.L7
  98              	.L6:
  24:../Sources/main.c **** 				else
  25:../Sources/main.c **** 					TFC_BAT_LED0_OFF;
  99              		.loc 1 25 0
 100 0048 944B     		ldr	r3, .L32+4
 101 004a 8022     		mov	r2, #128
 102 004c 5200     		lsl	r2, r2, #1
 103 004e 9A60     		str	r2, [r3, #8]
 104              	.L7:
  26:../Sources/main.c **** 				
  27:../Sources/main.c **** 				if(TFC_PUSH_BUTTON_1_PRESSED)
 105              		.loc 1 27 0
 106 0050 914B     		ldr	r3, .L32
 107 0052 1A69     		ldr	r2, [r3, #16]
 108 0054 8023     		mov	r3, #128
 109 0056 9B02     		lsl	r3, r3, #10
 110 0058 1340     		and	r3, r2
 111 005a 04D0     		beq	.L8
  28:../Sources/main.c **** 					TFC_BAT_LED3_ON;
 112              		.loc 1 28 0
 113 005c 8F4B     		ldr	r3, .L32+4
 114 005e 8022     		mov	r2, #128
 115 0060 1201     		lsl	r2, r2, #4
 116 0062 5A60     		str	r2, [r3, #4]
 117 0064 03E0     		b	.L9
 118              	.L8:
  29:../Sources/main.c **** 				else
  30:../Sources/main.c **** 					TFC_BAT_LED3_OFF;
 119              		.loc 1 30 0
 120 0066 8D4B     		ldr	r3, .L32+4
 121 0068 8022     		mov	r2, #128
 122 006a 1201     		lsl	r2, r2, #4
 123 006c 9A60     		str	r2, [r3, #8]
 124              	.L9:
  31:../Sources/main.c **** 				
  32:../Sources/main.c **** 				
  33:../Sources/main.c **** 				if(TFC_GetDIP_Switch()&0x01)
 125              		.loc 1 33 0
 126 006e FFF7FEFF 		bl	TFC_GetDIP_Switch
 127 0072 031C     		mov	r3, r0
 128 0074 1A1C     		mov	r2, r3
 129 0076 0123     		mov	r3, #1
 130 0078 1340     		and	r3, r2
 131 007a 04D0     		beq	.L10
  34:../Sources/main.c **** 					TFC_BAT_LED1_ON;
 132              		.loc 1 34 0
 133 007c 874B     		ldr	r3, .L32+4
 134 007e 8022     		mov	r2, #128
 135 0080 9200     		lsl	r2, r2, #2
 136 0082 5A60     		str	r2, [r3, #4]
 137 0084 03E0     		b	.L11
 138              	.L10:
  35:../Sources/main.c **** 				else
  36:../Sources/main.c **** 					TFC_BAT_LED1_OFF;
 139              		.loc 1 36 0
 140 0086 854B     		ldr	r3, .L32+4
 141 0088 8022     		mov	r2, #128
 142 008a 9200     		lsl	r2, r2, #2
 143 008c 9A60     		str	r2, [r3, #8]
 144              	.L11:
  37:../Sources/main.c **** 				
  38:../Sources/main.c **** 				if(TFC_GetDIP_Switch()&0x08)
 145              		.loc 1 38 0
 146 008e FFF7FEFF 		bl	TFC_GetDIP_Switch
 147 0092 031C     		mov	r3, r0
 148 0094 1A1C     		mov	r2, r3
 149 0096 0823     		mov	r3, #8
 150 0098 1340     		and	r3, r2
 151 009a 04D0     		beq	.L12
  39:../Sources/main.c **** 					TFC_BAT_LED2_ON;
 152              		.loc 1 39 0
 153 009c 7F4B     		ldr	r3, .L32+4
 154 009e 8022     		mov	r2, #128
 155 00a0 D200     		lsl	r2, r2, #3
 156 00a2 5A60     		str	r2, [r3, #4]
  40:../Sources/main.c **** 				else
  41:../Sources/main.c **** 					TFC_BAT_LED2_OFF;
  42:../Sources/main.c **** 				
  43:../Sources/main.c **** 				break;
 157              		.loc 1 43 0
 158 00a4 F6E0     		b	.L14
 159              	.L12:
  41:../Sources/main.c **** 					TFC_BAT_LED2_OFF;
 160              		.loc 1 41 0
 161 00a6 7D4B     		ldr	r3, .L32+4
 162 00a8 8022     		mov	r2, #128
 163 00aa D200     		lsl	r2, r2, #3
 164 00ac 9A60     		str	r2, [r3, #8]
 165              		.loc 1 43 0
 166 00ae F1E0     		b	.L14
 167              	.L3:
  44:../Sources/main.c **** 					
  45:../Sources/main.c **** 			case 1:
  46:../Sources/main.c **** 				
  47:../Sources/main.c **** 				//Demo mode 1 will just move the servos with the on-board potentiometers
  48:../Sources/main.c **** 				if(TFC_Ticker[0]>=20)
 168              		.loc 1 48 0
 169 00b0 7B4B     		ldr	r3, .L32+8
 170 00b2 1B68     		ldr	r3, [r3]
 171 00b4 132B     		cmp	r3, #19
 172 00b6 1CD9     		bls	.L15
  49:../Sources/main.c **** 				{
  50:../Sources/main.c **** 					TFC_Ticker[0] = 0; //reset the Ticker
 173              		.loc 1 50 0
 174 00b8 794B     		ldr	r3, .L32+8
 175 00ba 0022     		mov	r2, #0
 176 00bc 1A60     		str	r2, [r3]
  51:../Sources/main.c **** 					//Every 20 mSeconds, update the Servos
  52:../Sources/main.c **** 					TERMINAL_PRINTF("Pot0Value 2: 0x%X \n\r",PotADC_Value[0]);
 177              		.loc 1 52 0
 178 00be 794B     		ldr	r3, .L32+12
 179 00c0 1B88     		ldrh	r3, [r3]
 180 00c2 9BB2     		uxth	r3, r3
 181 00c4 7849     		ldr	r1, .L32+16
 182 00c6 794A     		ldr	r2, .L32+20
 183 00c8 081C     		mov	r0, r1
 184 00ca 111C     		mov	r1, r2
 185 00cc 1A1C     		mov	r2, r3
 186 00ce FFF7FEFF 		bl	Qprintf
  53:../Sources/main.c **** 					TFC_SetServo(0,TFC_ReadPot(0));
 187              		.loc 1 53 0
 188 00d2 0020     		mov	r0, #0
 189 00d4 FFF7FEFF 		bl	TFC_ReadPot
 190 00d8 031C     		add	r3, r0, #0
 191 00da 0020     		mov	r0, #0
 192 00dc 191C     		add	r1, r3, #0
 193 00de FFF7FEFF 		bl	TFC_SetServo
  54:../Sources/main.c **** 					TFC_SetServo(1,TFC_ReadPot(1));
 194              		.loc 1 54 0
 195 00e2 0120     		mov	r0, #1
 196 00e4 FFF7FEFF 		bl	TFC_ReadPot
 197 00e8 031C     		add	r3, r0, #0
 198 00ea 0120     		mov	r0, #1
 199 00ec 191C     		add	r1, r3, #0
 200 00ee FFF7FEFF 		bl	TFC_SetServo
 201              	.L15:
  55:../Sources/main.c **** 				}
  56:../Sources/main.c **** 				//Let's put a pattern on the LEDs
  57:../Sources/main.c **** 				if(TFC_Ticker[1] >= 125)
 202              		.loc 1 57 0
 203 00f2 6B4B     		ldr	r3, .L32+8
 204 00f4 5B68     		ldr	r3, [r3, #4]
 205 00f6 7C2B     		cmp	r3, #124
 206 00f8 0FD9     		bls	.L16
  58:../Sources/main.c **** 				{
  59:../Sources/main.c **** 					TFC_Ticker[1] = 0;
 207              		.loc 1 59 0
 208 00fa 694B     		ldr	r3, .L32+8
 209 00fc 0022     		mov	r2, #0
 210 00fe 5A60     		str	r2, [r3, #4]
  60:../Sources/main.c **** 					t++;
 211              		.loc 1 60 0
 212 0100 7B68     		ldr	r3, [r7, #4]
 213 0102 0133     		add	r3, r3, #1
 214 0104 7B60     		str	r3, [r7, #4]
  61:../Sources/main.c **** 					if(t>4)
 215              		.loc 1 61 0
 216 0106 7B68     		ldr	r3, [r7, #4]
 217 0108 042B     		cmp	r3, #4
 218 010a 01D9     		bls	.L17
  62:../Sources/main.c **** 					{
  63:../Sources/main.c **** 						t=0;
 219              		.loc 1 63 0
 220 010c 0023     		mov	r3, #0
 221 010e 7B60     		str	r3, [r7, #4]
 222              	.L17:
  64:../Sources/main.c **** 					}			
  65:../Sources/main.c **** 					TFC_SetBatteryLED_Level(t);
 223              		.loc 1 65 0
 224 0110 7B68     		ldr	r3, [r7, #4]
 225 0112 DBB2     		uxtb	r3, r3
 226 0114 181C     		mov	r0, r3
 227 0116 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 228              	.L16:
  66:../Sources/main.c **** 				}
  67:../Sources/main.c **** 				
  68:../Sources/main.c **** 				TFC_SetMotorPWM(0,0); //Make sure motors are off
 229              		.loc 1 68 0
 230 011a 0022     		mov	r2, #0
 231 011c 0023     		mov	r3, #0
 232 011e 101C     		add	r0, r2, #0
 233 0120 191C     		add	r1, r3, #0
 234 0122 FFF7FEFF 		bl	TFC_SetMotorPWM
  69:../Sources/main.c **** 				TFC_HBRIDGE_DISABLE;
 235              		.loc 1 69 0
 236 0126 624B     		ldr	r3, .L32+24
 237 0128 8022     		mov	r2, #128
 238 012a 9203     		lsl	r2, r2, #14
 239 012c 9A60     		str	r2, [r3, #8]
  70:../Sources/main.c **** 			
  71:../Sources/main.c **** 
  72:../Sources/main.c **** 				break;
 240              		.loc 1 72 0
 241 012e B1E0     		b	.L14
 242              	.L4:
  73:../Sources/main.c **** 				
  74:../Sources/main.c **** 			case 2 :
  75:../Sources/main.c **** 				
  76:../Sources/main.c **** 				//Demo Mode 2 will use the Pots to make the motors move
  77:../Sources/main.c **** 				TFC_HBRIDGE_ENABLE;
 243              		.loc 1 77 0
 244 0130 5F4B     		ldr	r3, .L32+24
 245 0132 8022     		mov	r2, #128
 246 0134 9203     		lsl	r2, r2, #14
 247 0136 5A60     		str	r2, [r3, #4]
  78:../Sources/main.c **** 				TFC_SetMotorPWM(TFC_ReadPot(0),TFC_ReadPot(1));
 248              		.loc 1 78 0
 249 0138 0020     		mov	r0, #0
 250 013a FFF7FEFF 		bl	TFC_ReadPot
 251 013e 041C     		add	r4, r0, #0
 252 0140 0120     		mov	r0, #1
 253 0142 FFF7FEFF 		bl	TFC_ReadPot
 254 0146 031C     		add	r3, r0, #0
 255 0148 201C     		add	r0, r4, #0
 256 014a 191C     		add	r1, r3, #0
 257 014c FFF7FEFF 		bl	TFC_SetMotorPWM
  79:../Sources/main.c **** 						
  80:../Sources/main.c **** 				//Let's put a pattern on the LEDs
  81:../Sources/main.c **** 				if(TFC_Ticker[1] >= 125)
 258              		.loc 1 81 0
 259 0150 534B     		ldr	r3, .L32+8
 260 0152 5B68     		ldr	r3, [r3, #4]
 261 0154 7C2B     		cmp	r3, #124
 262 0156 00D8     		bhi	.LCB203
 263 0158 99E0     		b	.L30	@long jump
 264              	.LCB203:
  82:../Sources/main.c **** 					{
  83:../Sources/main.c **** 						TFC_Ticker[1] = 0;
 265              		.loc 1 83 0
 266 015a 514B     		ldr	r3, .L32+8
 267 015c 0022     		mov	r2, #0
 268 015e 5A60     		str	r2, [r3, #4]
  84:../Sources/main.c **** 							t++;
 269              		.loc 1 84 0
 270 0160 7B68     		ldr	r3, [r7, #4]
 271 0162 0133     		add	r3, r3, #1
 272 0164 7B60     		str	r3, [r7, #4]
  85:../Sources/main.c **** 							if(t>4)
 273              		.loc 1 85 0
 274 0166 7B68     		ldr	r3, [r7, #4]
 275 0168 042B     		cmp	r3, #4
 276 016a 01D9     		bls	.L19
  86:../Sources/main.c **** 							{
  87:../Sources/main.c **** 								t=0;
 277              		.loc 1 87 0
 278 016c 0023     		mov	r3, #0
 279 016e 7B60     		str	r3, [r7, #4]
 280              	.L19:
  88:../Sources/main.c **** 							}			
  89:../Sources/main.c **** 						TFC_SetBatteryLED_Level(t);
 281              		.loc 1 89 0
 282 0170 7B68     		ldr	r3, [r7, #4]
 283 0172 DBB2     		uxtb	r3, r3
 284 0174 181C     		mov	r0, r3
 285 0176 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
  90:../Sources/main.c **** 					}
  91:../Sources/main.c **** 				break;
 286              		.loc 1 91 0
 287 017a 88E0     		b	.L30
 288              	.L5:
  92:../Sources/main.c **** 			
  93:../Sources/main.c **** 			case 3 :
  94:../Sources/main.c **** 			
  95:../Sources/main.c **** 				//Demo Mode 3 will be in Freescale Garage Mode.  It will beam data from the Camera to the 
  96:../Sources/main.c **** 				//Labview Application
  97:../Sources/main.c **** 				
  98:../Sources/main.c **** 		
  99:../Sources/main.c **** 				if(TFC_Ticker[0]>1000 && LineScanImageReady==1)
 289              		.loc 1 99 0
 290 017c 484B     		ldr	r3, .L32+8
 291 017e 1A68     		ldr	r2, [r3]
 292 0180 FA23     		mov	r3, #250
 293 0182 9B00     		lsl	r3, r3, #2
 294 0184 9A42     		cmp	r2, r3
 295 0186 00D8     		bhi	.LCB230
 296 0188 83E0     		b	.L31	@long jump
 297              	.LCB230:
 298              		.loc 1 99 0 is_stmt 0
 299 018a 4A4B     		ldr	r3, .L32+28
 300 018c 1B78     		ldrb	r3, [r3]
 301 018e DBB2     		uxtb	r3, r3
 302 0190 012B     		cmp	r3, #1
 303 0192 00D0     		beq	.LCB235
 304 0194 7DE0     		b	.L31	@long jump
 305              	.LCB235:
 100:../Sources/main.c **** 					{  
 101:../Sources/main.c **** 					 TFC_Ticker[0] = 0;
 306              		.loc 1 101 0 is_stmt 1
 307 0196 424B     		ldr	r3, .L32+8
 308 0198 0022     		mov	r2, #0
 309 019a 1A60     		str	r2, [r3]
 102:../Sources/main.c **** 					 LineScanImageReady=0;
 310              		.loc 1 102 0
 311 019c 454B     		ldr	r3, .L32+28
 312 019e 0022     		mov	r2, #0
 313 01a0 1A70     		strb	r2, [r3]
 103:../Sources/main.c **** 					 TERMINAL_PRINTF("\r\n");
 314              		.loc 1 103 0
 315 01a2 414A     		ldr	r2, .L32+16
 316 01a4 444B     		ldr	r3, .L32+32
 317 01a6 101C     		mov	r0, r2
 318 01a8 191C     		mov	r1, r3
 319 01aa FFF7FEFF 		bl	Qprintf
 104:../Sources/main.c **** 					 TERMINAL_PRINTF("L:");
 320              		.loc 1 104 0
 321 01ae 3E4A     		ldr	r2, .L32+16
 322 01b0 424B     		ldr	r3, .L32+36
 323 01b2 101C     		mov	r0, r2
 324 01b4 191C     		mov	r1, r3
 325 01b6 FFF7FEFF 		bl	Qprintf
 105:../Sources/main.c **** 					 //uint8_t val = TFC_ReadPot(0);
 106:../Sources/main.c **** 					 //TERMINAL_PRINTF("New Expo Time: 0x%X \n\r", PotADC_Value[0]); //0x000 - 0xFFF
 107:../Sources/main.c **** 					 TFC_SetLineScanExposureTime((uint32_t) (PotADC_Value[0]+500)*10); //100 to 4095+100
 326              		.loc 1 107 0
 327 01ba 3A4B     		ldr	r3, .L32+12
 328 01bc 1B88     		ldrh	r3, [r3]
 329 01be 9BB2     		uxth	r3, r3
 330 01c0 1A1C     		mov	r2, r3
 331 01c2 131C     		mov	r3, r2
 332 01c4 9B00     		lsl	r3, r3, #2
 333 01c6 9B18     		add	r3, r3, r2
 334 01c8 5B00     		lsl	r3, r3, #1
 335 01ca 3D4A     		ldr	r2, .L32+40
 336 01cc 9B18     		add	r3, r3, r2
 337 01ce 181C     		mov	r0, r3
 338 01d0 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 108:../Sources/main.c **** 					 
 109:../Sources/main.c **** 					 	if(t==0)
 339              		.loc 1 109 0
 340 01d4 7B68     		ldr	r3, [r7, #4]
 341 01d6 002B     		cmp	r3, #0
 342 01d8 02D1     		bne	.L21
 110:../Sources/main.c **** 					 		t=3;
 343              		.loc 1 110 0
 344 01da 0323     		mov	r3, #3
 345 01dc 7B60     		str	r3, [r7, #4]
 346 01de 02E0     		b	.L22
 347              	.L21:
 111:../Sources/main.c **** 					 	else
 112:../Sources/main.c **** 					 		t--;
 348              		.loc 1 112 0
 349 01e0 7B68     		ldr	r3, [r7, #4]
 350 01e2 013B     		sub	r3, r3, #1
 351 01e4 7B60     		str	r3, [r7, #4]
 352              	.L22:
 113:../Sources/main.c **** 					 	
 114:../Sources/main.c **** 						 TFC_SetBatteryLED_Level(t);
 353              		.loc 1 114 0
 354 01e6 7B68     		ldr	r3, [r7, #4]
 355 01e8 DBB2     		uxtb	r3, r3
 356 01ea 181C     		mov	r0, r3
 357 01ec FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 115:../Sources/main.c **** 						
 116:../Sources/main.c **** 						 for(i=0;i<128;i++)
 358              		.loc 1 116 0
 359 01f0 0023     		mov	r3, #0
 360 01f2 3B60     		str	r3, [r7]
 361 01f4 10E0     		b	.L23
 362              	.L24:
 117:../Sources/main.c **** 						 {
 118:../Sources/main.c **** 								 TERMINAL_PRINTF("0x%X,",LineScanImage0[i]);
 363              		.loc 1 118 0
 364 01f6 334B     		ldr	r3, .L32+44
 365 01f8 1A68     		ldr	r2, [r3]
 366 01fa 3B68     		ldr	r3, [r7]
 367 01fc 5B00     		lsl	r3, r3, #1
 368 01fe D318     		add	r3, r2, r3
 369 0200 1B88     		ldrh	r3, [r3]
 370 0202 9BB2     		uxth	r3, r3
 371 0204 2849     		ldr	r1, .L32+16
 372 0206 304A     		ldr	r2, .L32+48
 373 0208 081C     		mov	r0, r1
 374 020a 111C     		mov	r1, r2
 375 020c 1A1C     		mov	r2, r3
 376 020e FFF7FEFF 		bl	Qprintf
 116:../Sources/main.c **** 						 for(i=0;i<128;i++)
 377              		.loc 1 116 0
 378 0212 3B68     		ldr	r3, [r7]
 379 0214 0133     		add	r3, r3, #1
 380 0216 3B60     		str	r3, [r7]
 381              	.L23:
 116:../Sources/main.c **** 						 for(i=0;i<128;i++)
 382              		.loc 1 116 0 is_stmt 0
 383 0218 3B68     		ldr	r3, [r7]
 384 021a 7F2B     		cmp	r3, #127
 385 021c EBD9     		bls	.L24
 119:../Sources/main.c **** 						 }
 120:../Sources/main.c **** 						
 121:../Sources/main.c **** 						 for(i=0;i<128;i++)
 386              		.loc 1 121 0 is_stmt 1
 387 021e 0023     		mov	r3, #0
 388 0220 3B60     		str	r3, [r7]
 389 0222 30E0     		b	.L25
 390              	.L28:
 122:../Sources/main.c **** 						 {
 123:../Sources/main.c **** 								 TERMINAL_PRINTF("0x%X",LineScanImage1[i]);
 391              		.loc 1 123 0
 392 0224 294B     		ldr	r3, .L32+52
 393 0226 1A68     		ldr	r2, [r3]
 394 0228 3B68     		ldr	r3, [r7]
 395 022a 5B00     		lsl	r3, r3, #1
 396 022c D318     		add	r3, r2, r3
 397 022e 1B88     		ldrh	r3, [r3]
 398 0230 9BB2     		uxth	r3, r3
 399 0232 1D49     		ldr	r1, .L32+16
 400 0234 264A     		ldr	r2, .L32+56
 401 0236 081C     		mov	r0, r1
 402 0238 111C     		mov	r1, r2
 403 023a 1A1C     		mov	r2, r3
 404 023c FFF7FEFF 		bl	Qprintf
 124:../Sources/main.c **** 								 if(i==127) 
 405              		.loc 1 124 0
 406 0240 3B68     		ldr	r3, [r7]
 407 0242 7F2B     		cmp	r3, #127
 408 0244 0ED1     		bne	.L26
 125:../Sources/main.c **** 								 {
 126:../Sources/main.c **** 									 TERMINAL_PRINTF("\r\n",LineScanImage1[i]);
 409              		.loc 1 126 0
 410 0246 214B     		ldr	r3, .L32+52
 411 0248 1A68     		ldr	r2, [r3]
 412 024a 3B68     		ldr	r3, [r7]
 413 024c 5B00     		lsl	r3, r3, #1
 414 024e D318     		add	r3, r2, r3
 415 0250 1B88     		ldrh	r3, [r3]
 416 0252 9BB2     		uxth	r3, r3
 417 0254 1449     		ldr	r1, .L32+16
 418 0256 184A     		ldr	r2, .L32+32
 419 0258 081C     		mov	r0, r1
 420 025a 111C     		mov	r1, r2
 421 025c 1A1C     		mov	r2, r3
 422 025e FFF7FEFF 		bl	Qprintf
 423 0262 0DE0     		b	.L27
 424              	.L26:
 127:../Sources/main.c **** 								 }
 128:../Sources/main.c **** 								 else
 129:../Sources/main.c **** 								 {
 130:../Sources/main.c **** 									 TERMINAL_PRINTF(",",LineScanImage1[i]);
 425              		.loc 1 130 0
 426 0264 194B     		ldr	r3, .L32+52
 427 0266 1A68     		ldr	r2, [r3]
 428 0268 3B68     		ldr	r3, [r7]
 429 026a 5B00     		lsl	r3, r3, #1
 430 026c D318     		add	r3, r2, r3
 431 026e 1B88     		ldrh	r3, [r3]
 432 0270 9BB2     		uxth	r3, r3
 433 0272 0D49     		ldr	r1, .L32+16
 434 0274 174A     		ldr	r2, .L32+60
 435 0276 081C     		mov	r0, r1
 436 0278 111C     		mov	r1, r2
 437 027a 1A1C     		mov	r2, r3
 438 027c FFF7FEFF 		bl	Qprintf
 439              	.L27:
 121:../Sources/main.c **** 						 for(i=0;i<128;i++)
 440              		.loc 1 121 0
 441 0280 3B68     		ldr	r3, [r7]
 442 0282 0133     		add	r3, r3, #1
 443 0284 3B60     		str	r3, [r7]
 444              	.L25:
 121:../Sources/main.c **** 						 for(i=0;i<128;i++)
 445              		.loc 1 121 0 is_stmt 0
 446 0286 3B68     		ldr	r3, [r7]
 447 0288 7F2B     		cmp	r3, #127
 448 028a CBD9     		bls	.L28
 131:../Sources/main.c **** 								 }
 132:../Sources/main.c **** 						}										
 133:../Sources/main.c **** 							
 134:../Sources/main.c **** 					}
 135:../Sources/main.c **** 					
 136:../Sources/main.c **** 
 137:../Sources/main.c **** 
 138:../Sources/main.c **** 				break;
 449              		.loc 1 138 0 is_stmt 1
 450 028c 01E0     		b	.L31
 451              	.L30:
  91:../Sources/main.c **** 				break;
 452              		.loc 1 91 0
 453 028e C046     		mov	r8, r8
 454 0290 00E0     		b	.L14
 455              	.L31:
 456              		.loc 1 138 0
 457 0292 C046     		mov	r8, r8
 458              	.L14:
 139:../Sources/main.c **** 			}
 140:../Sources/main.c **** 	}
 459              		.loc 1 140 0
 460 0294 BBE6     		b	.L29
 461              	.L33:
 462 0296 C046     		.align	2
 463              	.L32:
 464 0298 80F00F40 		.word	1074786432
 465 029c 40F00F40 		.word	1074786368
 466 02a0 00000000 		.word	TFC_Ticker
 467 02a4 00000000 		.word	PotADC_Value
 468 02a8 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 469 02ac 00000000 		.word	.LC3
 470 02b0 00F10F40 		.word	1074786560
 471 02b4 00000000 		.word	LineScanImageReady
 472 02b8 18000000 		.word	.LC6
 473 02bc 1C000000 		.word	.LC8
 474 02c0 88130000 		.word	5000
 475 02c4 00000000 		.word	LineScanImage0
 476 02c8 20000000 		.word	.LC11
 477 02cc 00000000 		.word	LineScanImage1
 478 02d0 28000000 		.word	.LC14
 479 02d4 30000000 		.word	.LC16
 480              		.cfi_endproc
 481              	.LFE0:
 483              		.text
 484              	.Letext0:
 485              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 486              		.file 3 "C:/Users/B48861/TFC/TestMode/Project_Headers/MKL25Z4.h"
 487              		.file 4 "C:/Users/B48861/TFC/TestMode/Project_Headers/TFC\\TFC_Queue.h"
 488              		.file 5 "C:/Users/B48861/TFC/TestMode/Project_Headers/TFC\\TFC_ARM_SysTick.h"
 489              		.file 6 "C:/Users/B48861/TFC/TestMode/Project_Headers/TFC\\TFC_LineScanCamera.h"
 490              		.file 7 "C:/Users/B48861/TFC/TestMode/Project_Headers/TFC\\TFC_UART.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\B48861\AppData\Local\Temp\ccNfnmAa.s:18     .rodata:00000000 $d
C:\Users\B48861\AppData\Local\Temp\ccNfnmAa.s:37     .text.main:00000000 $t
C:\Users\B48861\AppData\Local\Temp\ccNfnmAa.s:42     .text.main:00000000 main
C:\Users\B48861\AppData\Local\Temp\ccNfnmAa.s:464    .text.main:00000298 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TFC_Init
TFC_Task
TFC_GetDIP_Switch
Qprintf
TFC_ReadPot
TFC_SetServo
TFC_SetBatteryLED_Level
TFC_SetMotorPWM
TFC_SetLineScanExposureTime
TFC_Ticker
PotADC_Value
SDA_SERIAL_OUTGOING_QUEUE
LineScanImageReady
LineScanImage0
LineScanImage1
