   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TFC_Motor.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.TFC_InitMotorPWM,"ax",%progbits
  18              		.align	2
  19              		.global	TFC_InitMotorPWM
  20              		.code	16
  21              		.thumb_func
  23              	TFC_InitMotorPWM:
  24              	.LFB0:
  25              		.file 1 "../Sources/TFC/TFC_Motor.c"
   1:../Sources/TFC/TFC_Motor.c **** #include "TFC\TFC.h"
   2:../Sources/TFC/TFC_Motor.c **** #include "derivative.h"
   3:../Sources/TFC/TFC_Motor.c **** 
   4:../Sources/TFC/TFC_Motor.c **** 
   5:../Sources/TFC/TFC_Motor.c **** #define FTM0_MOD_VALUE	(int)((float)(PERIPHERAL_BUS_CLOCK)/TFC_MOTOR_SWITCHING_FREQUENCY)
   6:../Sources/TFC/TFC_Motor.c **** 
   7:../Sources/TFC/TFC_Motor.c **** #define FTM0_CLOCK                                   	      (CORE_CLOCK/2)
   8:../Sources/TFC/TFC_Motor.c **** #define FTM0_CLK_PRESCALE                                 	   0  // Prescale Selector value - see c
   9:../Sources/TFC/TFC_Motor.c **** #define FTM0_OVERFLOW_FREQUENCY 5000							  // desired freq of PWM
  10:../Sources/TFC/TFC_Motor.c **** 
  11:../Sources/TFC/TFC_Motor.c **** 
  12:../Sources/TFC/TFC_Motor.c **** /**********************************************************************************************/
  13:../Sources/TFC/TFC_Motor.c **** 
  14:../Sources/TFC/TFC_Motor.c **** 
  15:../Sources/TFC/TFC_Motor.c **** void TFC_InitMotorPWM()
  16:../Sources/TFC/TFC_Motor.c **** {
  26              		.loc 1 16 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 00AF     		add	r7, sp, #0
  34              	.LCFI1:
  35              		.cfi_def_cfa_register 7
  17:../Sources/TFC/TFC_Motor.c **** 	//Clock Setup for the TPM requires a couple steps.
  18:../Sources/TFC/TFC_Motor.c **** 
  19:../Sources/TFC/TFC_Motor.c **** 	
  20:../Sources/TFC/TFC_Motor.c ****     //1st,  set the clock mux
  21:../Sources/TFC/TFC_Motor.c ****     //See Page 124 of f the KL25 Sub-Family Reference Manual, Rev. 3, September 2012
  22:../Sources/TFC/TFC_Motor.c ****     SIM_SOPT2 |= SIM_SOPT2_PLLFLLSEL_MASK;// We Want MCGPLLCLK/2 (See Page 196 of the KL25 Sub-Fami
  36              		.loc 1 22 0
  37 0004 2C4A     		ldr	r2, .L2
  38 0006 2C49     		ldr	r1, .L2
  39 0008 2C4B     		ldr	r3, .L2+4
  40 000a CB58     		ldr	r3, [r1, r3]
  41 000c 8021     		mov	r1, #128
  42 000e 4902     		lsl	r1, r1, #9
  43 0010 1943     		orr	r1, r3
  44 0012 2A4B     		ldr	r3, .L2+4
  45 0014 D150     		str	r1, [r2, r3]
  23:../Sources/TFC/TFC_Motor.c ****     SIM_SOPT2 &= ~(SIM_SOPT2_TPMSRC_MASK);
  46              		.loc 1 23 0
  47 0016 284A     		ldr	r2, .L2
  48 0018 2749     		ldr	r1, .L2
  49 001a 284B     		ldr	r3, .L2+4
  50 001c C958     		ldr	r1, [r1, r3]
  51 001e 284B     		ldr	r3, .L2+8
  52 0020 1940     		and	r1, r3
  53 0022 264B     		ldr	r3, .L2+4
  54 0024 D150     		str	r1, [r2, r3]
  24:../Sources/TFC/TFC_Motor.c ****     SIM_SOPT2 |= SIM_SOPT2_TPMSRC(1); //We want the MCGPLLCLK/2 (See Page 196 of the KL25 Sub-Famil
  55              		.loc 1 24 0
  56 0026 244A     		ldr	r2, .L2
  57 0028 2349     		ldr	r1, .L2
  58 002a 244B     		ldr	r3, .L2+4
  59 002c CB58     		ldr	r3, [r1, r3]
  60 002e 8021     		mov	r1, #128
  61 0030 4904     		lsl	r1, r1, #17
  62 0032 1943     		orr	r1, r3
  63 0034 214B     		ldr	r3, .L2+4
  64 0036 D150     		str	r1, [r2, r3]
  25:../Sources/TFC/TFC_Motor.c **** 
  26:../Sources/TFC/TFC_Motor.c **** 
  27:../Sources/TFC/TFC_Motor.c **** 	//Enable the Clock to the FTM0 Module
  28:../Sources/TFC/TFC_Motor.c **** 	//See Page 207 of f the KL25 Sub-Family Reference Manual, Rev. 3, September 2012
  29:../Sources/TFC/TFC_Motor.c **** 	SIM_SCGC6 |= SIM_SCGC6_TPM0_MASK;
  65              		.loc 1 29 0
  66 0038 1F4A     		ldr	r2, .L2
  67 003a 1F49     		ldr	r1, .L2
  68 003c 214B     		ldr	r3, .L2+12
  69 003e CB58     		ldr	r3, [r1, r3]
  70 0040 8021     		mov	r1, #128
  71 0042 4904     		lsl	r1, r1, #17
  72 0044 1943     		orr	r1, r3
  73 0046 1F4B     		ldr	r3, .L2+12
  74 0048 D150     		str	r1, [r2, r3]
  30:../Sources/TFC/TFC_Motor.c ****     
  31:../Sources/TFC/TFC_Motor.c ****     //The TPM Module has Clock.  Now set up the peripheral
  32:../Sources/TFC/TFC_Motor.c ****     
  33:../Sources/TFC/TFC_Motor.c ****     //Blow away the control registers to ensure that the counter is not running
  34:../Sources/TFC/TFC_Motor.c ****     TPM0_SC = 0;
  75              		.loc 1 34 0
  76 004a 1F4B     		ldr	r3, .L2+16
  77 004c 0022     		mov	r2, #0
  78 004e 1A60     		str	r2, [r3]
  35:../Sources/TFC/TFC_Motor.c ****     TPM0_CONF = 0;
  79              		.loc 1 35 0
  80 0050 1D4A     		ldr	r2, .L2+16
  81 0052 8423     		mov	r3, #132
  82 0054 0021     		mov	r1, #0
  83 0056 D150     		str	r1, [r2, r3]
  36:../Sources/TFC/TFC_Motor.c ****     
  37:../Sources/TFC/TFC_Motor.c ****     //While the counter is disabled we can setup the prescaler
  38:../Sources/TFC/TFC_Motor.c ****     
  39:../Sources/TFC/TFC_Motor.c ****     TPM0_SC = TPM_SC_PS(FTM0_CLK_PRESCALE);
  84              		.loc 1 39 0
  85 0058 1B4B     		ldr	r3, .L2+16
  86 005a 0022     		mov	r2, #0
  87 005c 1A60     		str	r2, [r3]
  40:../Sources/TFC/TFC_Motor.c ****     
  41:../Sources/TFC/TFC_Motor.c ****     //Setup the mod register to get the correct PWM Period
  42:../Sources/TFC/TFC_Motor.c ****     
  43:../Sources/TFC/TFC_Motor.c ****     TPM0_MOD = FTM0_CLOCK/(1<<FTM0_CLK_PRESCALE)/FTM0_OVERFLOW_FREQUENCY; // 4800 -> 200us = 5kHz 
  88              		.loc 1 43 0
  89 005e 1A4B     		ldr	r3, .L2+16
  90 0060 9622     		mov	r2, #150
  91 0062 5201     		lsl	r2, r2, #5
  92 0064 9A60     		str	r2, [r3, #8]
  44:../Sources/TFC/TFC_Motor.c ****     
  45:../Sources/TFC/TFC_Motor.c ****     //Setup Channels 0,1,2,3
  46:../Sources/TFC/TFC_Motor.c ****     TPM0_C0SC = TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK;
  93              		.loc 1 46 0
  94 0066 184B     		ldr	r3, .L2+16
  95 0068 2822     		mov	r2, #40
  96 006a DA60     		str	r2, [r3, #12]
  47:../Sources/TFC/TFC_Motor.c ****     TPM0_C1SC = TPM_CnSC_MSB_MASK | TPM_CnSC_ELSA_MASK; // invert the second PWM signal for a compl
  97              		.loc 1 47 0
  98 006c 164B     		ldr	r3, .L2+16
  99 006e 2422     		mov	r2, #36
 100 0070 5A61     		str	r2, [r3, #20]
  48:../Sources/TFC/TFC_Motor.c ****     TPM0_C2SC = TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK;
 101              		.loc 1 48 0
 102 0072 154B     		ldr	r3, .L2+16
 103 0074 2822     		mov	r2, #40
 104 0076 DA61     		str	r2, [r3, #28]
  49:../Sources/TFC/TFC_Motor.c ****     TPM0_C3SC = TPM_CnSC_MSB_MASK | TPM_CnSC_ELSA_MASK; // invert the second PWM signal for a compl
 105              		.loc 1 49 0
 106 0078 134B     		ldr	r3, .L2+16
 107 007a 2422     		mov	r2, #36
 108 007c 5A62     		str	r2, [r3, #36]
  50:../Sources/TFC/TFC_Motor.c ****     
  51:../Sources/TFC/TFC_Motor.c ****     
  52:../Sources/TFC/TFC_Motor.c ****     //Enable the Counter
  53:../Sources/TFC/TFC_Motor.c ****     
  54:../Sources/TFC/TFC_Motor.c ****     //Set the Default duty cycle to 50% duty cycle
  55:../Sources/TFC/TFC_Motor.c ****     TFC_SetMotorPWM(0,0);
 109              		.loc 1 55 0
 110 007e 0020     		mov	r0, #0
 111 0080 0021     		mov	r1, #0
 112 0082 FFF7FEFF 		bl	TFC_SetMotorPWM
  56:../Sources/TFC/TFC_Motor.c ****     
  57:../Sources/TFC/TFC_Motor.c ****     //Enable the TPM COunter
  58:../Sources/TFC/TFC_Motor.c ****     TPM0_SC |= TPM_SC_CMOD(1);
 113              		.loc 1 58 0
 114 0086 104B     		ldr	r3, .L2+16
 115 0088 0F4A     		ldr	r2, .L2+16
 116 008a 1268     		ldr	r2, [r2]
 117 008c 0821     		mov	r1, #8
 118 008e 0A43     		orr	r2, r1
 119 0090 1A60     		str	r2, [r3]
  59:../Sources/TFC/TFC_Motor.c ****     
  60:../Sources/TFC/TFC_Motor.c ****     
  61:../Sources/TFC/TFC_Motor.c ****     //Enable the FTM functions on the the port C
  62:../Sources/TFC/TFC_Motor.c ****     PORTC_PCR1 = PORT_PCR_MUX(4);
 120              		.loc 1 62 0
 121 0092 0E4B     		ldr	r3, .L2+20
 122 0094 8022     		mov	r2, #128
 123 0096 D200     		lsl	r2, r2, #3
 124 0098 5A60     		str	r2, [r3, #4]
  63:../Sources/TFC/TFC_Motor.c ****     PORTC_PCR2 = PORT_PCR_MUX(4);     
 125              		.loc 1 63 0
 126 009a 0C4B     		ldr	r3, .L2+20
 127 009c 8022     		mov	r2, #128
 128 009e D200     		lsl	r2, r2, #3
 129 00a0 9A60     		str	r2, [r3, #8]
  64:../Sources/TFC/TFC_Motor.c ****     PORTC_PCR3 = PORT_PCR_MUX(4);  
 130              		.loc 1 64 0
 131 00a2 0A4B     		ldr	r3, .L2+20
 132 00a4 8022     		mov	r2, #128
 133 00a6 D200     		lsl	r2, r2, #3
 134 00a8 DA60     		str	r2, [r3, #12]
  65:../Sources/TFC/TFC_Motor.c ****     PORTC_PCR4 = PORT_PCR_MUX(4);  
 135              		.loc 1 65 0
 136 00aa 084B     		ldr	r3, .L2+20
 137 00ac 8022     		mov	r2, #128
 138 00ae D200     		lsl	r2, r2, #3
 139 00b0 1A61     		str	r2, [r3, #16]
  66:../Sources/TFC/TFC_Motor.c **** 
  67:../Sources/TFC/TFC_Motor.c **** }
 140              		.loc 1 67 0
 141 00b2 BD46     		mov	sp, r7
 142              		@ sp needed for prologue
 143 00b4 80BD     		pop	{r7, pc}
 144              	.L3:
 145 00b6 C046     		.align	2
 146              	.L2:
 147 00b8 00700440 		.word	1074032640
 148 00bc 04100000 		.word	4100
 149 00c0 FFFFFFFC 		.word	-50331649
 150 00c4 3C100000 		.word	4156
 151 00c8 00800340 		.word	1073971200
 152 00cc 00B00440 		.word	1074049024
 153              		.cfi_endproc
 154              	.LFE0:
 156              		.global	__aeabi_uidiv
 157              		.section	.text.TFC_SetMotorPWM,"ax",%progbits
 158              		.align	2
 159              		.global	TFC_SetMotorPWM
 160              		.code	16
 161              		.thumb_func
 163              	TFC_SetMotorPWM:
 164              	.LFB1:
  68:../Sources/TFC/TFC_Motor.c **** 
  69:../Sources/TFC/TFC_Motor.c **** 
  70:../Sources/TFC/TFC_Motor.c **** 
  71:../Sources/TFC/TFC_Motor.c **** void TFC_SetMotorPWM(int16_t MotorA , int16_t MotorB)
  72:../Sources/TFC/TFC_Motor.c **** {
 165              		.loc 1 72 0
 166              		.cfi_startproc
 167 0000 90B5     		push	{r4, r7, lr}
 168              	.LCFI2:
 169              		.cfi_def_cfa_offset 12
 170              		.cfi_offset 4, -12
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
 173 0002 83B0     		sub	sp, sp, #12
 174              	.LCFI3:
 175              		.cfi_def_cfa_offset 24
 176 0004 00AF     		add	r7, sp, #0
 177              	.LCFI4:
 178              		.cfi_def_cfa_register 7
 179 0006 0A1C     		mov	r2, r1
 180 0008 BB1D     		add	r3, r7, #6
 181 000a 011C     		add	r1, r0, #0
 182 000c 1980     		strh	r1, [r3]
 183 000e 3B1D     		add	r3, r7, #4
 184 0010 1A80     		strh	r2, [r3]
  73:../Sources/TFC/TFC_Motor.c **** 	
  74:../Sources/TFC/TFC_Motor.c **** 	if(MotorA>1000)
 185              		.loc 1 74 0
 186 0012 BB1D     		add	r3, r7, #6
 187 0014 0021     		mov	r1, #0
 188 0016 5A5E     		ldrsh	r2, [r3, r1]
 189 0018 FA23     		mov	r3, #250
 190 001a 9B00     		lsl	r3, r3, #2
 191 001c 9A42     		cmp	r2, r3
 192 001e 04DD     		ble	.L5
  75:../Sources/TFC/TFC_Motor.c **** 		MotorA = 1000;
 193              		.loc 1 75 0
 194 0020 BB1D     		add	r3, r7, #6
 195 0022 FA22     		mov	r2, #250
 196 0024 9200     		lsl	r2, r2, #2
 197 0026 1A80     		strh	r2, [r3]
 198 0028 08E0     		b	.L6
 199              	.L5:
  76:../Sources/TFC/TFC_Motor.c **** 	else if(MotorA<-1000)
 200              		.loc 1 76 0
 201 002a BB1D     		add	r3, r7, #6
 202 002c 0021     		mov	r1, #0
 203 002e 5A5E     		ldrsh	r2, [r3, r1]
 204 0030 234B     		ldr	r3, .L9
 205 0032 9A42     		cmp	r2, r3
 206 0034 02DA     		bge	.L6
  77:../Sources/TFC/TFC_Motor.c **** 		MotorA = -1000;
 207              		.loc 1 77 0
 208 0036 BB1D     		add	r3, r7, #6
 209 0038 214A     		ldr	r2, .L9
 210 003a 1A80     		strh	r2, [r3]
 211              	.L6:
  78:../Sources/TFC/TFC_Motor.c **** 
  79:../Sources/TFC/TFC_Motor.c **** 	if(MotorB>1000)
 212              		.loc 1 79 0
 213 003c 3B1D     		add	r3, r7, #4
 214 003e 0021     		mov	r1, #0
 215 0040 5A5E     		ldrsh	r2, [r3, r1]
 216 0042 FA23     		mov	r3, #250
 217 0044 9B00     		lsl	r3, r3, #2
 218 0046 9A42     		cmp	r2, r3
 219 0048 04DD     		ble	.L7
  80:../Sources/TFC/TFC_Motor.c **** 		MotorB = 1000;
 220              		.loc 1 80 0
 221 004a 3B1D     		add	r3, r7, #4
 222 004c FA22     		mov	r2, #250
 223 004e 9200     		lsl	r2, r2, #2
 224 0050 1A80     		strh	r2, [r3]
 225 0052 08E0     		b	.L8
 226              	.L7:
  81:../Sources/TFC/TFC_Motor.c **** 	else if(MotorB<-1000)
 227              		.loc 1 81 0
 228 0054 3B1D     		add	r3, r7, #4
 229 0056 0021     		mov	r1, #0
 230 0058 5A5E     		ldrsh	r2, [r3, r1]
 231 005a 194B     		ldr	r3, .L9
 232 005c 9A42     		cmp	r2, r3
 233 005e 02DA     		bge	.L8
  82:../Sources/TFC/TFC_Motor.c **** 		MotorB = -1000;
 234              		.loc 1 82 0
 235 0060 3B1D     		add	r3, r7, #4
 236 0062 174A     		ldr	r2, .L9
 237 0064 1A80     		strh	r2, [r3]
 238              	.L8:
  83:../Sources/TFC/TFC_Motor.c **** 
  84:../Sources/TFC/TFC_Motor.c **** //	TPM0_C2V = (uint16_t) ((float)TPM0_MOD * (float)((MotorA + 1.0)/2.0));
  85:../Sources/TFC/TFC_Motor.c **** 	TPM0_C2V = TPM0_MOD * (MotorA+1000)/2000;
 239              		.loc 1 85 0
 240 0066 174C     		ldr	r4, .L9+4
 241 0068 164B     		ldr	r3, .L9+4
 242 006a 9B68     		ldr	r3, [r3, #8]
 243 006c BA1D     		add	r2, r7, #6
 244 006e 0021     		mov	r1, #0
 245 0070 525E     		ldrsh	r2, [r2, r1]
 246 0072 FA21     		mov	r1, #250
 247 0074 8900     		lsl	r1, r1, #2
 248 0076 5218     		add	r2, r2, r1
 249 0078 5343     		mul	r3, r2
 250 007a 181C     		mov	r0, r3
 251 007c FA23     		mov	r3, #250
 252 007e D900     		lsl	r1, r3, #3
 253 0080 FFF7FEFF 		bl	__aeabi_uidiv
 254 0084 031C     		mov	r3, r0
 255 0086 2362     		str	r3, [r4, #32]
  86:../Sources/TFC/TFC_Motor.c ****     TPM0_C3V = TPM0_C2V;
 256              		.loc 1 86 0
 257 0088 0E4B     		ldr	r3, .L9+4
 258 008a 0E4A     		ldr	r2, .L9+4
 259 008c 126A     		ldr	r2, [r2, #32]
 260 008e 9A62     		str	r2, [r3, #40]
  87:../Sources/TFC/TFC_Motor.c **** //	TPM0_C0V = (uint16_t) ((float)TPM0_MOD * (float)((MotorB + 1.0)/2.0));
  88:../Sources/TFC/TFC_Motor.c **** 	TPM0_C0V = TPM0_MOD * (MotorB+1000)/2000;
 261              		.loc 1 88 0
 262 0090 0C4C     		ldr	r4, .L9+4
 263 0092 0C4B     		ldr	r3, .L9+4
 264 0094 9B68     		ldr	r3, [r3, #8]
 265 0096 3A1D     		add	r2, r7, #4
 266 0098 0021     		mov	r1, #0
 267 009a 525E     		ldrsh	r2, [r2, r1]
 268 009c FA21     		mov	r1, #250
 269 009e 8900     		lsl	r1, r1, #2
 270 00a0 5218     		add	r2, r2, r1
 271 00a2 5343     		mul	r3, r2
 272 00a4 181C     		mov	r0, r3
 273 00a6 FA23     		mov	r3, #250
 274 00a8 D900     		lsl	r1, r3, #3
 275 00aa FFF7FEFF 		bl	__aeabi_uidiv
 276 00ae 031C     		mov	r3, r0
 277 00b0 2361     		str	r3, [r4, #16]
  89:../Sources/TFC/TFC_Motor.c ****     TPM0_C1V = TPM0_C0V;
 278              		.loc 1 89 0
 279 00b2 044B     		ldr	r3, .L9+4
 280 00b4 034A     		ldr	r2, .L9+4
 281 00b6 1269     		ldr	r2, [r2, #16]
 282 00b8 9A61     		str	r2, [r3, #24]
  90:../Sources/TFC/TFC_Motor.c **** 
  91:../Sources/TFC/TFC_Motor.c **** }
 283              		.loc 1 91 0
 284 00ba BD46     		mov	sp, r7
 285 00bc 03B0     		add	sp, sp, #12
 286              		@ sp needed for prologue
 287 00be 90BD     		pop	{r4, r7, pc}
 288              	.L10:
 289              		.align	2
 290              	.L9:
 291 00c0 18FCFFFF 		.word	-1000
 292 00c4 00800340 		.word	1073971200
 293              		.cfi_endproc
 294              	.LFE1:
 296              		.text
 297              	.Letext0:
 298              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 299              		.file 3 "C:/Users/B48861/TFC/Carcode/Project_Headers/MKL25Z4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TFC_Motor.c
C:\Users\B48861\AppData\Local\Temp\ccys8wv0.s:18     .text.TFC_InitMotorPWM:00000000 $t
C:\Users\B48861\AppData\Local\Temp\ccys8wv0.s:23     .text.TFC_InitMotorPWM:00000000 TFC_InitMotorPWM
C:\Users\B48861\AppData\Local\Temp\ccys8wv0.s:163    .text.TFC_SetMotorPWM:00000000 TFC_SetMotorPWM
C:\Users\B48861\AppData\Local\Temp\ccys8wv0.s:147    .text.TFC_InitMotorPWM:000000b8 $d
C:\Users\B48861\AppData\Local\Temp\ccys8wv0.s:158    .text.TFC_SetMotorPWM:00000000 $t
C:\Users\B48861\AppData\Local\Temp\ccys8wv0.s:291    .text.TFC_SetMotorPWM:000000c0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
